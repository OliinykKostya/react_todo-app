{"version":3,"sources":["TodoApp.js","TodoItem.js","TodoList.js","TodosFilter.js","App.js","index.js"],"names":["TodoApp","state","text","handlTitleChange","event","setState","target","value","trim","handlFormSubmit","preventDefault","newTodo","id","Date","completed","props","addTodo","className","onSubmit","this","type","onChange","placeholder","React","Component","TodoItem","item","doneTask","onClick","htmlFor","TodoList","items","map","key","TodosFilter","href","App","todos","todo","filter","length","ReactDOM","render","document","getElementById"],"mappings":"oQAyDeA,E,4MArDbC,MAAQ,CACNC,KAAM,I,EAGRC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZH,KAAME,EAAME,OAAOC,MAAMC,U,EAI7BC,gBAAkB,SAACL,GACjBA,EAAMM,iBAEN,EAAKL,UAAS,SAACJ,GACb,IAAMU,EAAU,CACdT,KAAMD,EAAMC,KACZU,IAAK,IAAIC,KACTC,UAAW,IAKb,OAFA,EAAKC,MAAMC,QAAQL,GAEZ,CACLT,KAAM,GACNU,GAAI,EACJE,WAAW,O,uDAMf,OACE,4BAAQG,UAAU,UAChB,oCACA,0BAAMC,SAAUC,KAAKV,iBACnB,2BACEW,KAAK,OACLb,MAAOY,KAAKlB,MAAMC,KAClBmB,SAAUF,KAAKhB,iBACfc,UAAU,WACVK,YAAY,iC,GAzCFC,IAAMC,WCyBbC,EAzBE,SAAC,GAAD,QAAGC,KAAQd,EAAX,EAAWA,GAAIV,EAAf,EAAeA,KAAMY,EAArB,EAAqBA,UAAaa,EAAlC,EAAkCA,SAAlC,OACf,wBAAIV,UAAWH,EAAY,YAAc,IACvC,yBAAKG,UAAU,QACb,2BACEG,KAAK,WACLH,UAAU,SACVL,GAAIA,EACJgB,QAAS,kBAAMD,EAASf,MAE1B,2BAAOiB,QAASjB,GAAKV,GACrB,4BAAQkB,KAAK,SAASH,UAAU,aAElC,2BAAOG,KAAK,OAAOH,UAAU,WCUlBa,EArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,SAAV,OACf,oCACE,2BAAOP,KAAK,WAAWR,GAAG,aAAaK,UAAU,eACjD,2BAAOY,QAAQ,cAAf,wBACA,wBAAIZ,UAAU,aACXc,EAAMC,KAAI,SAAAN,GAAI,OACb,kBAAC,EAAD,CACEA,KAAMA,EACNC,SAAUA,EACVM,IAAKP,EAAKd,WCuBLsB,EAjCK,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAH,OAElB,4BAAQT,UAAU,UAChB,0BAAMA,UAAU,cACbS,EACA,IAFH,cAMA,wBAAIT,UAAU,WACZ,4BACE,uBAAGkB,KAAK,KAAKlB,UAAU,YAAvB,QAGF,4BACE,uBAAGkB,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQf,KAAK,SAASH,UAAU,mBAAhC,qBC2BWmB,E,4MA/CbnC,MAAQ,CACNoC,MAAO,I,EAGTrB,QAAU,SAACsB,GACT,EAAKjC,UAAS,SAAAJ,GAAK,MAAK,CACtBoC,MAAM,GAAD,mBAAMpC,EAAMoC,OAAZ,CAAmBC,S,EAI5BX,SAAW,SAACf,GACV,EAAKP,UAAS,SAAAJ,GAAK,MAAK,CACtBoC,MAAOpC,EAAMoC,MAAML,KAAI,SAACN,GACtB,OAAIA,EAAKd,KAAOA,EACP,2BACFc,GADL,IAEEZ,WAAYY,EAAKZ,YAIdY,U,uDAKH,IACAW,EAAUlB,KAAKlB,MAAfoC,MAER,OACE,6BAASpB,UAAU,WACjB,kBAAC,EAAD,CAASD,QAASG,KAAKH,UAEvB,6BAASC,UAAU,QAChBoB,GAEG,kBAAC,EAAD,CACEN,MAAOM,EACPV,SAAUR,KAAKQ,YAIvB,kBAAC,EAAD,CAAaD,KAAMW,EAAME,QAAO,SAAAb,GAAI,OAAKA,EAAKZ,aAAW0B,c,GA1C/CjB,IAAMC,WCCxBiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c8512f6d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    text: '',\n  }\n\n  handlTitleChange = (event) => {\n    this.setState({\n      text: event.target.value.trim(),\n    });\n  }\n\n  handlFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n      const newTodo = {\n        text: state.text,\n        id: +new Date(),\n        completed: '',\n      };\n\n      this.props.addTodo(newTodo);\n\n      return {\n        text: '',\n        id: 0,\n        completed: false,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todo</h1>\n        <form onSubmit={this.handlFormSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.text}\n            onChange={this.handlTitleChange}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ item: { id, text, completed }, doneTask }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={() => doneTask(id)}\n      />\n      <label htmlFor={id}>{text}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ items, doneTask }) => (\n  <>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {items.map(item => (\n        <TodoItem\n          item={item}\n          doneTask={doneTask}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nTodoList.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ item }) => (\n\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {item}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nTodosFilter.propTypes = {\n  item: PropTypes.number.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport TodoList from './TodoList';\nimport TodosFilter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n  }\n\n  addTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  }\n\n  doneTask = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp addTodo={this.addTodo} />\n\n        <section className=\"main\">\n          {todos\n            && (\n              <TodoList\n                items={todos}\n                doneTask={this.doneTask}\n              />\n            )}\n        </section>\n        <TodosFilter item={todos.filter(item => !item.completed).length} />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}