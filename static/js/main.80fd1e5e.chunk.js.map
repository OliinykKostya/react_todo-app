{"version":3,"sources":["TodoApp.js","TodoItem.js","TodoList.js","TodosFilter.js","App.js","index.js"],"names":["TodoApp","state","text","handlTitleChange","event","setState","target","value","handlFormSubmit","preventDefault","newTodo","replace","id","Date","completed","props","addTodo","className","onSubmit","this","type","onChange","placeholder","React","Component","TodoItem","item","doneTask","deleteTodo","onClick","checked","htmlFor","TodoList","items","markAll","every","map","key","TodosFilter","handlFilter","filter","deleteCompleted","all","classNames","selected","active","done","href","App","todos","todoFilter","toggleAll","todo","string","str","length","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80fd1e5e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    text: '',\n  }\n\n  handlTitleChange = (event) => {\n    this.setState({\n      text: event.target.value,\n    });\n  }\n\n  handlFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n      const newTodo = {\n        text: state.text.replace(/^\\s+/, ''),\n        id: +new Date(),\n        completed: '',\n      };\n\n      if (newTodo.text === '') {\n        return null;\n      }\n\n      this.props.addTodo(newTodo);\n\n      return {\n        text: '',\n        id: 0,\n        completed: false,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todo</h1>\n        <form onSubmit={this.handlFormSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.text}\n            onChange={this.handlTitleChange}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ item: { id, text, completed }, doneTask, deleteTodo }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={() => doneTask(id)}\n        checked={completed}\n      />\n      <label htmlFor={id}>{text}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ items, doneTask, deleteTodo, markAll }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={markAll}\n      checked={items.every(item => item.completed)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {items.map(item => (\n        <TodoItem\n          item={item}\n          doneTask={doneTask}\n          deleteTodo={deleteTodo}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nTodoList.propTypes = {\n  markAll: PropTypes.func.isRequired,\n  doneTask: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = (props) => {\n  const { item, handlFilter, filter, deleteCompleted, completed } = props;\n  const all = classNames({selected: filter === 'All'})\n  const active = classNames({selected: filter === 'Active'})\n  const done = classNames({selected: filter === 'Completed'}) \n  \n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {item}\n        {' '}\n            items left\n          </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={all}\n            onClick={() => handlFilter('All')}\n          >\n            All\n              </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={active}\n            onClick={() => handlFilter('Active')}\n          >\n            Active\n              </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={done}\n            onClick={() => handlFilter('Completed')}\n          >\n            Completed\n              </a>\n        </li>\n      </ul>\n      {completed && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={deleteCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  )\n}\n\nTodosFilter.propTypes = {\n  completed: PropTypes.func.isRequired,\n  item: PropTypes.number.isRequired,\n  handlFilter: PropTypes.func.isRequired,\n  deleteCompleted: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport TodoList from './TodoList';\nimport TodosFilter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todoFilter: 'All',\n    toggleAll: true,\n  }\n\n  addTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  }\n\n  doneTask = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  }\n\n  handlFilter = (string) => {\n    const str = string;\n\n    this.setState(() => ({\n      todoFilter: str,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== id),\n    }));\n  }\n\n  deleteCompleted = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => !item.completed),\n    }));\n  }\n\n  markAll = () => {\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item,\n        completed: state.toggleAll,\n      })),\n      toggleAll: !state.toggleAll,\n    }));\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoFilter === 'All') {\n      todos = [...this.state.todos];\n    } else if (this.state.todoFilter === 'Active') {\n      todos = this.state.todos.filter(item => !item.completed);\n    } else if (this.state.todoFilter === 'Completed') {\n      todos = this.state.todos.filter(item => item.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          addTodo={this.addTodo}\n        />\n\n        <section className=\"main\">\n          {todos\n            && (\n              <TodoList\n                items={todos}\n                doneTask={this.doneTask}\n                deleteTodo={this.deleteTodo}\n                markAll={this.markAll}\n              />\n            )}\n        </section>\n        {this.state.todos.length > 0 && (\n          <TodosFilter\n            item={todos.filter(item => !item.completed).length}\n            completed={todos.some(item => item.completed)}\n            handlFilter={this.handlFilter}\n            filter={this.state.todoFilter}\n            deleteCompleted={this.deleteCompleted}\n          />\n        )}\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}