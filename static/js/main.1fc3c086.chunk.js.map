{"version":3,"sources":["TodoApp.js","TodoItem.js","TodoList.js","TodosFilter.js","App.js","index.js"],"names":["TodoApp","state","text","handlTitleChange","event","setState","target","value","trim","handlFormSubmit","preventDefault","newTodo","id","Date","completed","props","addTodo","className","onSubmit","this","type","onChange","placeholder","React","Component","TodoItem","item","doneTask","deleteTodo","onClick","checked","htmlFor","TodoList","items","map","key","TodosFilter","handlFilter","filter","deleteCompleted","href","App","todos","todoFilter","todo","string","str","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fc3c086.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    text: '',\n  }\n\n  handlTitleChange = (event) => {\n    this.setState({\n      text: event.target.value.trim(),\n    });\n  }\n\n  handlFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n      const newTodo = {\n        text: state.text,\n        id: +new Date(),\n        completed: '',\n      };\n\n      this.props.addTodo(newTodo);\n\n      return {\n        text: '',\n        id: 0,\n        completed: false,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todo</h1>\n        <form onSubmit={this.handlFormSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.text}\n            onChange={this.handlTitleChange}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ item: { id, text, completed }, doneTask, deleteTodo }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={() => doneTask(id)}\n        checked={completed}\n      />\n      <label htmlFor={id}>{text}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ items, doneTask, deleteTodo }) => (\n  <>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {items.map(item => (\n        <TodoItem\n          item={item}\n          doneTask={doneTask}\n          deleteTodo={deleteTodo}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nTodoList.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ item, handlFilter, filter, deleteCompleted }) => (\n\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {item}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filter === 'All' ? 'selected' : ''}\n          onClick={() => handlFilter('All')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filter === 'Active' ? 'selected' : ''}\n          onClick={() => handlFilter('Active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filter === 'Completed' ? 'selected' : ''}\n          onClick={() => handlFilter('Completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\" onClick={deleteCompleted}>\n      Clear completed\n    </button>\n  </footer>\n);\n\nTodosFilter.propTypes = {\n  item: PropTypes.number.isRequired,\n  handlFilter: PropTypes.func.isRequired,\n  deleteCompleted: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport TodoList from './TodoList';\nimport TodosFilter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todoFilter: 'All',\n  }\n\n  addTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  }\n\n  doneTask = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  }\n\n  handlFilter = (string) => {\n    const str = string;\n\n    this.setState(() => ({\n      todoFilter: str,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== id),\n    }));\n  }\n\n  deleteCompleted = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.completed !== true),\n    }));\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoFilter === 'All') {\n      todos = [...this.state.todos];\n    } else if (this.state.todoFilter === 'Active') {\n      todos = this.state.todos.filter(item => !item.completed);\n    } else if (this.state.todoFilter === 'Completed') {\n      todos = this.state.todos.filter(item => item.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          addTodo={this.addTodo}\n        />\n\n        <section className=\"main\">\n          {todos\n            && (\n              <TodoList\n                items={todos}\n                doneTask={this.doneTask}\n                deleteTodo={this.deleteTodo}\n              />\n            )}\n        </section>\n        <TodosFilter\n          item={todos.filter(item => !item.completed).length}\n          handlFilter={this.handlFilter}\n          filter={this.state.todoFilter}\n          deleteCompleted={this.deleteCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}